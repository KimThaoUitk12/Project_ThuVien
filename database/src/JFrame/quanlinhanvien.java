/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrame;


import QLTV.Cquanlinhanvien;
import static QLTV.Cquanlinhanvien.CThemnv;
import static QLTV.Cquanlinhanvien.DoiPassNV;
import static QLTV.Cquanlinhanvien.XuLiGioiTinh;
import database.Database;
import static database.Database.conectionJDBC;
import static database.Database.TaoMa;
import static database.Database.ConvertUtilDateToSqlDate;
import static database.Database.StringToInt;
import static database.Database.StringToUttilDate;
import static database.Database.getData;
import database.Mquanlinhanvien;
import static database.Mquanlinhanvien.MTimNV;
import static database.Mquanlinhanvien.MXoaNV;
import static database.Mquanlinhanvien.TaoDefaultNV;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.*;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class quanlinhanvien extends javax.swing.JFrame implements ActionListener, ListSelectionListener {

    /**
     * Creates new form quanlinhanvien
     */
    public quanlinhanvien() {
        initComponents();
        this.setDefaultNhanVien();
        this.BThemNV.addActionListener(this);
        this.BHuy.addActionListener(this);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.BSuaNV.setEnabled(false);
        this.BXoaNV.setEnabled(false);
        this.BSuaNV.addActionListener(this);
        this.BTimNV.addActionListener(this);
        this.BXoaNV.addActionListener(this);
        this.BDoiPass.addActionListener(this);
        this.BXemNV.addActionListener(this);
        this.TableNV.getSelectionModel().addListSelectionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TextTenTK = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        BDoiPass = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        PassNhapLaiMK = new javax.swing.JPasswordField();
        PassMKMoi = new javax.swing.JPasswordField();
        PassMKCu = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableNV = new javax.swing.JTable();
        TextTenNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        RadioNam = new javax.swing.JRadioButton();
        RadioNu = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TextDiaChiNV = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TextTenTaiKhoan = new javax.swing.JTextField();
        BThemNV = new javax.swing.JButton();
        BXoaNV = new javax.swing.JButton();
        BSuaNV = new javax.swing.JButton();
        BHuy = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        DateNgaySinh = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        TextSDT = new javax.swing.JTextField();
        TextTim = new javax.swing.JTextField();
        BTimNV = new javax.swing.JButton();
        Lableemail = new javax.swing.JLabel();
        TextEmail = new javax.swing.JTextField();
        BXemNV = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÍ NHÂN VIÊN | Trường THPT DƯỠNG ĐIỀM");

        jLabel8.setBackground(new java.awt.Color(255, 0, 0));
        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel8.setText("Đổi mật khẩu tài khoản");
        jLabel8.setOpaque(true);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Tên tài khoản");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Mật khẩu cũ ");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Mật khẩu mới");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Nhập lại mật khẩu");

        BDoiPass.setText("Thay đổi");
        BDoiPass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        jButton7.setText("Thoát");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 204), 3));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 262, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextTenTK, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PassMKCu, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(PassNhapLaiMK, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PassMKMoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(BDoiPass, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(610, 610, 610))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextTenTK)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PassMKCu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PassMKMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PassNhapLaiMK, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(BDoiPass))
                .addContainerGap(340, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đổi mật khẩu", jPanel3);

        jLabel1.setBackground(new java.awt.Color(204, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Thông tin nhân viên");
        jLabel1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Họ và tên");

        TableNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaNV", "TenNV", "Giới tính", "Địa chỉ", "Ngày sinh", "SDT", "Tên tài khoản", "Chức vụ"
            }
        ));
        jScrollPane1.setViewportView(TableNV);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Giới tính");

        RadioNam.setText("Nam");

        RadioNu.setText("Nữ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Địa chỉ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Ngày sinh");

        TextDiaChiNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextDiaChiNVActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Tên tài khoản");

        TextTenTaiKhoan.setEditable(false);

        BThemNV.setText("Thêm");
        BThemNV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        BXoaNV.setText("Xóa");
        BXoaNV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        BSuaNV.setText("Sửa");
        BSuaNV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        BHuy.setText("Hủy");
        BHuy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 204), 3));

        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("SDT");

        BTimNV.setText("TÌM");

        Lableemail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Lableemail.setText("Email");

        BXemNV.setText("Xem");
        BXemNV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(BThemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BXemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(BXoaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(BSuaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(BHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(238, 238, 238))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(28, 28, 28)
                                        .addComponent(TextTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(RadioNam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RadioNu)))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TextDiaChiNV, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(Lableemail))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TextEmail)
                                    .addComponent(TextTenTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(TextSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(230, 230, 230))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(TextTim, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BTimNV)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextTenTaiKhoan)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(TextSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TextDiaChiNV)
                    .addComponent(TextTenNV))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Lableemail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(RadioNam)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(RadioNu)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(TextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BTimNV)
                            .addComponent(TextTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(DateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BThemNV)
                        .addComponent(BXoaNV)
                        .addComponent(BSuaNV)
                        .addComponent(BHuy)
                        .addComponent(BXemNV)))
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("Quản lí nhân viên", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextDiaChiNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextDiaChiNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextDiaChiNVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanlinhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanlinhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanlinhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanlinhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanlinhanvien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BDoiPass;
    private javax.swing.JButton BHuy;
    private javax.swing.JButton BSuaNV;
    private javax.swing.JButton BThemNV;
    private javax.swing.JButton BTimNV;
    private javax.swing.JButton BXemNV;
    private javax.swing.JButton BXoaNV;
    private com.toedter.calendar.JDateChooser DateNgaySinh;
    private javax.swing.JLabel Lableemail;
    private javax.swing.JPasswordField PassMKCu;
    private javax.swing.JPasswordField PassMKMoi;
    private javax.swing.JPasswordField PassNhapLaiMK;
    private javax.swing.JRadioButton RadioNam;
    private javax.swing.JRadioButton RadioNu;
    private javax.swing.JTable TableNV;
    private javax.swing.JTextField TextDiaChiNV;
    private javax.swing.JTextField TextEmail;
    private javax.swing.JTextField TextSDT;
    private javax.swing.JTextField TextTenNV;
    private javax.swing.JTextField TextTenTK;
    private javax.swing.JTextField TextTenTaiKhoan;
    private javax.swing.JTextField TextTim;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent ae) {
        if (ae.getSource().equals(BDoiPass)) {
            DoiPassNV(this.TextTenTK.getText(), this.PassMKCu.getText(), this.PassMKMoi.getText(), this.PassNhapLaiMK.getText());
//            int temp = 0;
//            String sql = "select * from TAIKHOAN where TENTK='" + this.TextTenTK.getText() + "' and MATKHAU='" + this.PassMKCu.getText() + "'";
//            ResultSet rs = getData(conectionJDBC(), sql);
//            try {
//                while (rs.next()) {
//                    temp++;
//                }
//            } catch (SQLException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            if (temp <= 0) {
//                JOptionPane.showMessageDialog(null, "tên tài khoản hoặc mật khẩu sai");
//                return;
//            }
//            if (this.PassNhapLaiMK.getText().equals(this.PassMKMoi.getText()) == false) {
//                System.out.println(this.PassNhapLaiMK.getText() + " " + this.PassMKMoi.getText());
//                JOptionPane.showMessageDialog(null, "nhập lại mật khẩu sai");
//            }
//            if (temp > 0 && (this.PassNhapLaiMK.getText().equals(this.PassMKMoi.getText()))) {
//                String sqlmk = "update TAIKHOAN set MATKHAU='" + this.PassMKMoi.getText() + "' where TENTK='" + this.TextTenTK.getText() + "'";
//                try {
//                    PreparedStatement prst = conectionJDBC().prepareStatement(sqlmk);
//                    prst.execute();
//                    JOptionPane.showMessageDialog(null, "cập nhật thành công");
//                } catch (SQLException ex) {
//                    Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
        }
        if (ae.getSource().equals(BTimNV)) {
//            String sqltim = "select * from NHANVIEN JOIN TAIKHOAN ON NHANVIEN.MANHANVIEN=TAIKHOAN.TENTK WHERE HOTEN LIKE '%" + this.TextTim.getText() + "%' OR TENTK LIKE '%" + this.TextTim.getText() + "%'";
//            ResultSet rs = getData(conectionJDBC(), sqltim);
//            String[] dataNV = new String[9];
//            DefaultTableModel model = new DefaultTableModel();
//            String[] title = {"Mã NV", "Tên NV", "Giới tính", "Địa chỉ", "Ngày sinh", "SDT", "Tài khoản", "Chức vụ", "Email"};
//            model.setColumnIdentifiers(title);
//            try {
//                while (rs.next()) {
//                    dataNV[0] = rs.getNString("MANHANVIEN");
//                    dataNV[1] = rs.getNString("HOTEN");
//                    dataNV[2] = rs.getNString("GIOITINH");
//                    dataNV[3] = rs.getNString("DIACHI");
//                    dataNV[4] = rs.getNString("NGAYSINH");
//                    dataNV[5] = rs.getNString("SDT");
//                    dataNV[6] = rs.getNString("TENTK");
//                    dataNV[7] = rs.getNString("CHUCVU");
//                    dataNV[8] = rs.getNString("EMAIL");
//                    model.addRow(dataNV);
//                }
//            } catch (SQLException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
            this.TableNV.setModel((DefaultTableModel) MTimNV(this.TextTim.getText()));
        }
        if (ae.getSource().equals(BHuy)) {
            this.TableNV.getSelectionModel().clearSelection();
            this.setDefaultNhanVien();
        }
        if (ae.getSource().equals(BSuaNV)) {
            this.TableNV.getSelectionModel().clearSelection();
//            String sqltk = "update taikhoan set loaitk='" + (String) this.CBBoxChucVu.getSelectedItem() + "' where tentk='" + this.TextTenTK.getText() + "'";
//            PreparedStatement st;
//            try {
//                st = conectionJDBC().prepareStatement(sqltk);
//                st.executeUpdate();
//            } catch (SQLException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            String sql = "UPDATE NHANVIEN SET HOTEN=?, GIOITINH=?, DIACHI=?, NGAYSINH=TO_DATE(?,'dd-MM-yyyy'), SDT=?, EMAIL=? WHERE MANHANVIEN=?";
//            String strDate = new SimpleDateFormat("dd-MM-yyyy").format(new java.sql.Date((this.DateNgaySinh.getDate()).getTime()));
//            PreparedStatement st;
//            try {
//                st = conectionJDBC().prepareStatement(sql);
//                st.setString(1, this.TextTenNV.getText());
//                st.setString(7, this.TextTenTaiKhoan.getText());
//                st.setString(3, this.TextDiaChiNV.getText());
//                st.setString(5, this.TextSDT.getText());
//                st.setString(4, strDate);
//                st.setString(6, this.TextEmail.getText());
////                String gt;
////                if (this.RadioNam.isSelected() && this.RadioNu.isSelected()) {
////                    JOptionPane.showMessageDialog(null, "chỉ được chọn nam hoặc nữ");
////                }
////                if (this.RadioNam.isSelected() == false && this.RadioNu.isSelected() == false) {
////                    JOptionPane.showMessageDialog(null, "hãy chọn giới tính");
////                }
////                if (this.RadioNam.isSelected()) {
////                    gt = "nam";
////                } else {
////                    gt = "nu";
////                }
//                st.setString(2, XuLiGioiTinh(this.RadioNam.isSelected(),this.RadioNu.isSelected()));
//                st.executeUpdate();
//                JOptionPane.showMessageDialog(null, "Sửa thông tin thành công");
//                System.out.println("thành công");
//                this.setDefaultNhanVien();
//                this.BSuaNV.setEnabled(false);
//                this.BXoaNV.setEnabled(false);
//            } catch (SQLException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
        Mquanlinhanvien.MSuaNV(this.TextTenNV.getText(),XuLiGioiTinh(this.RadioNam.isSelected(), this.RadioNu.isSelected()), this.TextDiaChiNV.getText(),this.DateNgaySinh.getDate(),this.TextSDT.getText(), this.TextEmail.getText(),this.TextTenTK.getText());
                        this.setDefaultNhanVien();
                this.BSuaNV.setEnabled(false);
                this.BXoaNV.setEnabled(false);
        }
        if (ae.getSource().equals(BXemNV)) {
            this.BSuaNV.setEnabled(true);
            this.BXoaNV.setEnabled(true);
            int index = this.TableNV.getSelectedRow();
            this.TextTenNV.setText((String) this.TableNV.getValueAt(index, 1));
            this.TextDiaChiNV.setText((String) this.TableNV.getValueAt(index, 3));
            this.TextTenTK.setText((String) this.TableNV.getValueAt(index, 6));
//            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//            // set formatter to use UTC (instead of JVM default timezone)
//            sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
//            try {
//                // parse it as midnight (no shift to 01:00)
//                java.util.Date date = sdf.parse((String) this.TableNV.getValueAt(index, 4));
//                java.util.Date dateutil = new java.util.Date(date.getTime());
//                this.DateNgaySinh.setDate(dateutil);
//            } catch (ParseException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
             this.DateNgaySinh.setDate(StringToUttilDate((String) this.TableNV.getValueAt(index, 4)));
            this.TextTenTaiKhoan.setText((String) this.TableNV.getValueAt(index, 6));
//            for (int i = 0; i < this.CBBoxChucVu.getItemCount(); i++) {
//                if (this.CBBoxChucVu.getItemAt(i).equals((String) this.TableNV.getValueAt(index, 7))) {
//                    this.CBBoxChucVu.setSelectedIndex(i);
//                }
//            }
            if (((String) this.TableNV.getValueAt(index, 2)).equals("nam")) {
                this.RadioNam.setSelected(true);
                this.RadioNu.setSelected(false);
            } else {
                this.RadioNam.setSelected(false);
                this.RadioNu.setSelected(true);
            }
            this.TextSDT.setText((String) this.TableNV.getValueAt(index, 5));
            this.TextEmail.setText((String) this.TableNV.getValueAt(index, 8));
        }
        if (ae.getSource().equals(BXoaNV)) {
            int index = this.TableNV.getSelectedRow();
//            String sqlxoa = "{ call XOA_NHANVIEN(?) }";
//            try {
//                CallableStatement st = conectionJDBC().prepareCall(sqlxoa);
//                st.setString(1, (String) this.TableNV.getValueAt(index, 0));
//                st.execute();
//            } catch (SQLException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
            MXoaNV((String) this.TableNV.getValueAt(index, 0));
            DefaultTableModel model = (DefaultTableModel) this.TableNV.getModel();
            model.removeRow(index);
            this.TableNV.setModel(model);
            this.BSuaNV.setEnabled(false);
            this.BXoaNV.setEnabled(false);
        }
        if(ae.getSource().equals(BThemNV)){
//            String sql="{call ADD_NHANVIEN(?,?,?,?,?,?,?,?,?,?,?)}";
//            String strDate = new SimpleDateFormat("dd-MM-yyyy").format(new java.sql.Date((this.DateNgaySinh.getDate()).getTime()));
//            try {
//                String User=TaoMaNV();
//                CallableStatement call=conectionJDBC ().prepareCall(sql);
//                call.setString(1, User);
//                call.setString(2, User);
//                call.setString(3, "thu thu");
//                call.setString(4, User);
//                call.setString(5, this.TextTenNV.getText());
//                call.setString(6, strDate);
//                call.setString(7, this.TextSDT.getText());
//                call.setString(8, this.TextEmail.getText());
//                 if (this.RadioNam.isSelected() && this.RadioNu.isSelected()) {
//                    JOptionPane.showMessageDialog(null, "chỉ được chọn nam hoặc nữ");
//                }
//                if (this.RadioNam.isSelected() == false && this.RadioNu.isSelected() == false) {
//                    JOptionPane.showMessageDialog(null, "hãy chọn giới tính");
//                }
//                if (this.RadioNam.isSelected()) {
//                    call.setString(9, "nam");
//                } else {
//                    call.setString(9, "nu");
//                }
//                call.setString(10, "thu thu");
//                call.setString(11, this.TextDiaChiNV.getText());
//                call.execute();
//                this.setDefaultNhanVien();
//            } catch (SQLException ex) {
//                Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//            }
                String temp=Database.TaoMa("nhanvien");
                CThemnv(temp,temp,temp,this.TextTenNV.getText(),this.DateNgaySinh.getDate(),this.TextSDT.getText(),this.TextEmail.getText(),Cquanlinhanvien.XuLiGioiTinh(this.RadioNam.isSelected(),this.RadioNu.isSelected()),this.TextDiaChiNV.getText());
                this.setDefaultNhanVien();
        }
    }

   

    @Override
    public void valueChanged(ListSelectionEvent lse) {
//        this.BSuaNV.setEnabled(true);
//        this.BXoaNV.setEnabled(true);
//        int index=this.TableNV.getSelectedRow();
//        this.TextTenNV.setText((String) this.TableNV.getValueAt(index, 1));
//        this.TextDiaChiNV.setText((String) this.TableNV.getValueAt(index, 3));
//        this.TextTenTK.setText((String) this.TableNV.getValueAt(index, 6));
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//    // set formatter to use UTC (instead of JVM default timezone)
//        sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
//        try {
//            // parse it as midnight (no shift to 01:00)
//            java.util.Date date =  sdf.parse((String)this.TableNV.getValueAt(index, 4));
//            java.util.Date dateutil=new java.util.Date(date.getTime());
//            this.DateNgaySinh.setDate(dateutil);
//        } catch (ParseException ex) {
//            Logger.getLogger(quanlinhanvien.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        this.TextTenTaiKhoan.setText((String) this.TableNV.getValueAt(index, 6));
//        this.TextChucVu.setText((String) this.TableNV.getValueAt(index, 7));
//        if(((String)this.TableNV.getValueAt(index, 2)).equals("nam")){
//            this.RadioNam.setSelected(true);
//            this.RadioNu.setSelected(false);
//        }else{
//            this.RadioNam.setSelected(false);
//            this.RadioNu.setSelected(true);
//        }
//        this.TextSDT.setText((String)this.TableNV.getValueAt(index, 5));
//        this.TextEmail.setText((String)this.TableNV.getValueAt(index, 8));
    }
     public void setDefaultNhanVien() {
//        this.CBBoxChucVu.removeAllItems();
//        String[] cbb = {"admin", "thu thu"};
//        this.CBBoxChucVu.setModel((new DefaultComboBoxModel(cbb)));
//        String sql = "select * from TAIKHOAN JOIN NHANVIEN ON TAIKHOAN.TENTK=NHANVIEN.MANHANVIEN";
//        ResultSet rs = getData(conectionJDBC(), sql);
//        DefaultTableModel model = new DefaultTableModel();
//        String[] title = {"Mã NV", "Tên NV", "Giới tính", "Địa chỉ", "Ngày sinh", "SDT", "Tài khoản", "Chức vụ", "Email"};
//        model.setColumnIdentifiers(title);
//        String[] dataNV = new String[9];
//        try {
//            while (rs.next()) {
//                dataNV[0] = rs.getNString("MANHANVIEN");
//                dataNV[1] = rs.getNString("HOTEN");
//                dataNV[2] = rs.getNString("GIOITINH");
//                dataNV[3] = rs.getNString("DIACHI");
//                dataNV[4] = rs.getNString("NGAYSINH");
//                dataNV[5] = rs.getNString("SDT");
//                dataNV[6] = rs.getNString("TENTK");
//                dataNV[7] = rs.getNString("CHUCVU");
//                dataNV[8] = rs.getNString("EMAIL");
//                model.addRow(dataNV);
//            }
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//        }
        this.TableNV.setModel(TaoDefaultNV());
    }
//    public static String TaoMaNV(){
//        int dem = 1;
//        Vector<String> v = new Vector<String>();
//        String sql = "select MANHANVIEN FROM NHANVIEN", temp = "";
//        ResultSet rs = getData(conectionJDBC(), sql);
//        try {
//            while (rs.next()) {
//                v.add(rs.getString("MANHANVIEN"));
//            }
//            Collections.sort(v);
//            for (int i = 0; i < v.size(); i++) {
//                System.out.print(v.get(i) + " ");
//            }
//            if (dem >= v.size()) {
//                temp += String.valueOf(StringToInt(v.get(v.size() - 1)) + 1);
//            } else {
//                for (int i = 0; i < v.size() - 1; i++) {
//                    if (StringToInt(v.get(i + 1)) - StringToInt(v.get(i)) > 1) {
//                        //System.out.println(StringToInt(v.get(i)) + 1);
//                        temp += String.valueOf(StringToInt(v.get(i)) + 1);
//                        break;
//                    } else {
//                        dem++;
//                    }
//                }
//                System.out.println("dem:" + dem);
//            }
//            if (dem >= v.size()) {
////                temp += String.valueOf(StringToInt(v.get(v.size() - 1)) + 1);
//                temp += String.valueOf(dem + 1);
//            }
//            //System.out.println(StringToInt(v.get(v.size()-1)) + 1);
//            System.out.println("temp:" + temp);
//            if (Integer.parseInt(temp) < 10) {
//                temp = "TT00" + temp;
//            } else if (Integer.parseInt(temp) >= 10 && Integer.parseInt(temp) < 100) {
//                temp = "TT0" + temp;
//            } else if (Integer.parseInt(temp) >= 100) {
//                temp = "TT" + temp;
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(quanlidocgia.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return temp;
//    }

}
